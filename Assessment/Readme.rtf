#Language Used : Java
#Database: Mongodb
#Test: Junit
#IDE: Eclipse

Directory of the code: Illumio/Assessment/Test/src/com/Illomio/Firewall.java

#Approach:
General approach was to save the rules in the database and retrieve the records to see if the packet is allowed or blocked.

1. I've used mongoDB not SQL databases because I wanted to store the ip_address both as a single value and in range also.
2. I've used deprecated method of mongo in one instance as I had limited time and the other methods were not able to connect to my mongodb and were giving me exceptions.
3. While testing I've tried every edgecases and use-cases I can think of.
4. If I had time, I would've optimize the insertion part of the database as right now multiple entries can be same.
5. Also, to make it more optimized I would've used the indexes in the java code.
6. Tried to comment as much as I can to make it reader friendly.
7. Used API docs and stackoverflow to refer the functions and usage.
8. Used JUnit Test for the cases provided in the description.
9. Once the data is loaded my code runs fast, I think the only drawback might be the redundant entries.
10. I've tried with million records, which is attached in the screenshot as well.

#Assumptions
1. The files with the rules have following columns in order.
	- Direction
	- protocol
	- port
	-ip_address

 2. Everything that is passed in the rules files and in the accept_packet method are valid inputs and are according to the problem description.


#Future Work
1. Adding Indexes to the collection.
2. Adding checks to eliminate duplicate entries.
3. Adding checks for the input file data
4. Remove deprecated methods.

#Preference for position:
1. Platform Team
2. Data Team
3. Policy Team
